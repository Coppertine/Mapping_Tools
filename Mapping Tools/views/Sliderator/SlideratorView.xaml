<local:SingleRunMappingTool x:Class="Mapping_Tools.Views.SlideratorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Mapping_Tools.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:graph="clr-namespace:Mapping_Tools.Components.Graph"
             xmlns:domain="clr-namespace:Mapping_Tools.Components.Domain"
             xmlns:objectVisualiser="clr-namespace:Mapping_Tools.Components.ObjectVisualiser"
             mc:Ignorable="d" 
             x:Name="This"
             d:DesignHeight="450" Width="759.5" d:DataContext="{d:DesignData SlideratorVm}">
    <local:SingleRunMappingTool.Resources>
        <domain:DoubleToStringConverter x:Key="DoubleToStringConverter"/>
        <domain:TimeToStringConverter x:Key="TimeToStringConverter"/>
    </local:SingleRunMappingTool.Resources>
    <Grid Name="MasterGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <TextBlock FontSize="40" FontWeight="Bold" Foreground="{DynamicResource PrimaryHueMidBrush}">
                <Run Text="Sliderator"/>
            </TextBlock>
            <materialDesign:PopupBox Margin="10" VerticalAlignment="Bottom">
                <materialDesign:PopupBox.ToggleContent>
                    <materialDesign:PackIcon Kind="HelpCircle" Width="24" Height="24" Foreground="{DynamicResource SecondaryAccentBrush}"/>
                </materialDesign:PopupBox.ToggleContent>
                <TextBlock TextWrapping="Wrap" MaxWidth="600" Padding="5">
                </TextBlock>
            </materialDesign:PopupBox>
        </StackPanel>

        <Grid Name="FirstGrid" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="200"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="90"/>
            </Grid.ColumnDefinitions>

            <graph:Graph Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" x:Name="Graph" MinMarkerSpacing="20"
                         Margin="43 0 0 43" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                         MaxX="{Binding GraphBeats, Mode=TwoWay}"/>

            <materialDesign:Card Grid.Column="2" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0" Padding="10">
                <objectVisualiser:HitObjectElement x:Name="GraphHitObjectElement" Width="200" HitObject="{Binding VisibleHitObject}"
                                                   Stroke="YellowGreen" Fill="DarkSlateGray" SliderBallStroke="White" Thickness="50"/>
            </materialDesign:Card>

            <StackPanel Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Margin="0 10 0 0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ComboBox Grid.Column="0" ItemsSource="{Binding ImportModes}" SelectedItem="{Binding ImportMode}" Margin="0 0 5 0"/>

                    <TextBox Grid.Column="1" Text="{Binding ExactTime, Converter={StaticResource TimeToStringConverter}}" materialDesign:HintAssist.Hint="Time"
                             Width="100" Visibility="{Binding ExactTimeBoxVisibility, FallbackValue=Collapsed}" Margin="5 0 5 2"/>

                    <Button Grid.Column="2" Style="{StaticResource MaterialDesignRaisedButton}" Command="{Binding ImportCommand}" Margin="5 0 0 0"
                            ToolTip="Import sliders into the preview." HorizontalAlignment="Right" VerticalAlignment="Top">
                        Import sliders
                    </Button>
                </Grid>
                <Grid Margin="0 10 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="{Binding LoadedHitObjects.Count, StringFormat={}Loaded {0} slider(s)}"/>

                    <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Margin="0 0 5 0"
                                Command="{Binding MoveLeftCommand}">
                            <Button.Content>
                                <materialDesign:PackIcon Kind="KeyboardArrowLeft" Width="24" Height="24"/>
                            </Button.Content>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                Command="{Binding MoveRightCommand}">
                            <Button.Content>
                                <materialDesign:PackIcon Kind="KeyboardArrowRight" Width="24" Height="24"/>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Margin="0 10 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Column="0" Margin="0 0 10 0" materialDesign:HintAssist.Hint="Beat length" Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding Path="GraphBeats" Mode="TwoWay" UpdateSourceTrigger="LostFocus"  NotifyOnValidationError="True">
                                <Binding.Converter>
                                    <domain:DoubleToStringConverter/>
                                </Binding.Converter>
                                <Binding.ValidationRules>
                                    <domain:IsLessOrEqualValidationRule>
                                        <domain:IsLessOrEqualValidationRule.ValueWrapper>
                                            <domain:DoubleWrapper Value="10000"/>
                                        </domain:IsLessOrEqualValidationRule.ValueWrapper>
                                    </domain:IsLessOrEqualValidationRule>
                                    <domain:IsGreaterOrEqualValidationRule>
                                        <domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                            <domain:DoubleWrapper Value="0"/>
                                        </domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                    </domain:IsGreaterOrEqualValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBox Grid.Column="1" Margin="0 0 10 0" materialDesign:HintAssist.Hint="BPM" Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding Path="BeatsPerMinute" Mode="TwoWay" UpdateSourceTrigger="LostFocus" NotifyOnValidationError="True">
                                <Binding.Converter>
                                    <domain:DoubleToStringConverter/>
                                </Binding.Converter>
                                <Binding.ValidationRules>
                                    <domain:IsGreaterValidationRule>
                                        <domain:IsGreaterValidationRule.ValueWrapper>
                                            <domain:DoubleWrapper Value="0"/>
                                        </domain:IsGreaterValidationRule.ValueWrapper>
                                    </domain:IsGreaterValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBox Grid.Column="2" Margin="0" materialDesign:HintAssist.Hint="Global SV" Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding Path="GlobalSv" Mode="TwoWay" UpdateSourceTrigger="LostFocus" NotifyOnValidationError="True">
                                <Binding.Converter>
                                    <domain:DoubleToStringConverter/>
                                </Binding.Converter>
                                <Binding.ValidationRules>
                                    <domain:IsLessOrEqualValidationRule>
                                        <domain:IsLessOrEqualValidationRule.ValueWrapper>
                                            <domain:DoubleWrapper Value="3.6"/>
                                        </domain:IsLessOrEqualValidationRule.ValueWrapper>
                                    </domain:IsLessOrEqualValidationRule>
                                    <domain:IsGreaterOrEqualValidationRule>
                                        <domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                            <domain:DoubleWrapper Value="0.4"/>
                                        </domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                    </domain:IsGreaterOrEqualValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>

                <TextBox Margin="0 30 0 0" materialDesign:HintAssist.Hint="Time" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         ToolTip="The time in the current beatmap to export the sliderated slider to."
                         Text="{Binding ExportTime, Converter={StaticResource TimeToStringConverter}}"/>

                <ComboBox Margin="0 10 0 0" ToolTip="Choose how you want to export sliders." ItemsSource="{Binding ExportModes}"
                          SelectedItem="{Binding ExportMode}"/>
            </StackPanel>

            <Grid Grid.Row="1" Grid.Column="1" Margin="10 0 10 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Margin="8 0 8 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Column="0" Margin="0 0 8 0" HorizontalAlignment="Left"
                             materialDesign:HintAssist.Hint="SV limit" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             MaxWidth="140" MinWidth="100"
                             ToolTip="Self-imposed SV limit to help you make sure the slope in the graph doesn't become greater than this speed limit. For example use 10x SV limit to match the osu! speed limit.">
                        <TextBox.Text>
                            <Binding Path="VelocityLimit" Mode="TwoWay" Converter="{StaticResource DoubleToStringConverter}" ConverterParameter="10" UpdateSourceTrigger="LostFocus"  NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <domain:IsLessOrEqualValidationRule>
                                        <domain:IsLessOrEqualValidationRule.ValueWrapper>
                                            <domain:DoubleWrapper Value="10000"/>
                                        </domain:IsLessOrEqualValidationRule.ValueWrapper>
                                    </domain:IsLessOrEqualValidationRule>
                                    <domain:IsGreaterOrEqualValidationRule>
                                        <domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                            <domain:DoubleWrapper Value="0"/>
                                        </domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                    </domain:IsGreaterOrEqualValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Margin="0 0 5 0"
                                ToolTip="Scale graph to completion." Click="ScaleCompleteButton_OnClick">
                            <Button.Content>
                                <materialDesign:PackIcon Kind="RelativeScale" Width="24" Height="24"/>
                            </Button.Content>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Margin="0 0 5 0"
                                ToolTip="Clear graph." Click="ClearButton_OnClick">
                            <Button.Content>
                                <materialDesign:PackIcon Kind="Rocket" Width="24" Height="24"/>
                            </Button.Content>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Margin="5 0 0 0"
                                ToolTip="Toggle graph mode." Command="{Binding GraphToggleCommand}">
                            <Button.Content>
                                <Viewbox Width="24" Height="24">
                                    <TextBlock x:Name="GraphToggleContentTextBlock" FontWeight="Bold">V</TextBlock>
                                </Viewbox>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </Grid>

                <Slider Grid.Row="1" Minimum="1" Maximum="16" Value="{Binding BeatSnapDivisor}" Style="{StaticResource MaterialDesignDiscreteSlider}"/>

                <ToolBarOverflowPanel HorizontalAlignment="Left" Grid.Row="2" Margin="5 10 5 0">
                    <CheckBox IsChecked="{Binding ShowRedAnchors}" Content="Show red anchors" Margin="0 0 5 0"/>
                    <CheckBox IsChecked="{Binding ShowGraphAnchors}" Content="Show graph anchors"/>
                </ToolBarOverflowPanel>
            </Grid>

            <Viewbox Grid.Row="1" Grid.Column="3" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="70">
                <Button
                    Style="{StaticResource MaterialDesignFloatingActionButton}"
                    IsEnabled="{Binding ElementName=This, Path=CanRun}"
                    Click="Start_Click">
                    <materialDesign:PackIcon
                        Kind="Play" Height="36" Width="36" />
                </Button>
            </Viewbox>
        </Grid>

        <Grid Name="SecondGrid" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <WrapPanel VerticalAlignment="Bottom">
                    <TextBlock TextWrapping="NoWrap" Text="Made by OliBomby" FontWeight="Bold" Opacity="0.58"/>
                </WrapPanel>
            </Grid>
            <Grid Grid.Column="1">
                <ProgressBar Value="{Binding ElementName=This, Path=Progress}" Margin="20,0,20,0" Height="20" Background="{x:Null}" BorderBrush="{x:Null}"/>
            </Grid>
        </Grid>
    </Grid>
</local:SingleRunMappingTool>
