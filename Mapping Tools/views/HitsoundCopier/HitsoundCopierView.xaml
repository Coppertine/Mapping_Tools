<local:SingleRunMappingTool x:Class="Mapping_Tools.Views.HitsoundCopierView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Mapping_Tools.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:domain="clr-namespace:Mapping_Tools.Components.Domain"
             mc:Ignorable="d" 
             x:Name="This"
             d:DesignHeight="650" Width="759.5">
    <local:SingleRunMappingTool.Resources>
        <domain:MapPathStringToCountStringConverter x:Key="MapPathStringToCountStringConverter"/>
    </local:SingleRunMappingTool.Resources>
    <Grid Name="MasterGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Name="FirstGrid" Grid.Row="0">
            <StackPanel Grid.Row="0" Margin="0,0,120,0">
                <StackPanel Orientation="Horizontal">
                  <TextBlock FontSize="40" FontWeight="Bold" Foreground="{DynamicResource PrimaryHueMidBrush}">
                    <Run Text="Hitsound Copier"/>
                  </TextBlock>
                  <materialDesign:PopupBox Margin="10" VerticalAlignment="Bottom">
                    <materialDesign:PopupBox.ToggleContent>
                      <materialDesign:PackIcon Kind="HelpCircle" Width="24" Height="24" Foreground="{DynamicResource SecondaryAccentBrush}"/>
                    </materialDesign:PopupBox.ToggleContent>
                    <TextBlock TextWrapping="Wrap" MaxWidth="600" Padding="5">
                      Copies hitsounds from A to B.
                      <LineBreak/>
                      There are 2 modes. First mode is overwrite everything. This will basically first remove the hitsounds from the map you’re copying to and then copy the hitsounds.
                      <LineBreak/>
                      Second mode is copying only the defined hitsounds. A defined hitsound is when there is something there in the map you’re copying from. This mode will copy over all the hitsounds from the map you’re copying from. Anything in the map you’re copying to that has not been defined in the map you’re copying from will not change. For instance muted sliderends will remain there.
                    </TextBlock>
                  </materialDesign:PopupBox>
                </StackPanel>
              
                <Grid Margin="0,20,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" x:Name="BeatmapFromBox" Margin="0,0,5,0"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Copy hitsounds from"/>
                    <Button Grid.Column="1" Cursor="Hand" Click="BeatmapFromLoad_Click" Style="{StaticResource IconButton}" VerticalAlignment="Bottom">
                        <materialDesign:PackIcon Width="30" Height="30" Cursor="Hand" Kind="Download" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                    </Button >
                    <Button Grid.Column="3" Cursor="Hand" Click="BeatmapFromBrowse_Click" Style="{StaticResource IconButton}" VerticalAlignment="Bottom">
                        <materialDesign:PackIcon Width="30" Height="30" Cursor="Hand" Kind="Folder" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                    </Button >
                </Grid>
                <Grid Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" x:Name="BeatmapToBox" Margin="0,0,5,0"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Copy hitsounds to"/>
                    <TextBlock Grid.Column="1" Margin="3 15 5 0" FontStyle="Italic"
                               ToolTip="Multiple beatmaps can be inputted in this field. Separate the paths with the '|' character."
                               Text="{Binding ElementName=BeatmapToBox, Path=Text, Converter={StaticResource MapPathStringToCountStringConverter}}"/>
                    <Button Grid.Column="2" Cursor="Hand" Click="BeatmapToLoad_Click" Style="{StaticResource IconButton}" VerticalAlignment="Bottom">
                        <materialDesign:PackIcon Width="30" Height="30" Cursor="Hand" Kind="Download" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                    </Button >
                    <Button Grid.Column="4" Cursor="Hand" Click="BeatmapToBrowse_Click" Style="{StaticResource IconButton}" VerticalAlignment="Bottom">
                        <materialDesign:PackIcon Width="30" Height="30" Cursor="Hand" Kind="Folder" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                    </Button >
                </Grid>
                <ComboBox x:Name="CopyModeBox" Margin="0,20,0,0" SelectedIndex="1" Cursor="Hand"
                    Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.Hint="Copying mode">
                    <ComboBoxItem Content="Overwrite everything" Cursor="Hand"/>
                    <ComboBoxItem Content="Overwrite only defined" Cursor="Hand"/>
                </ComboBox>
                <TextBox x:Name="LeniencyBox" Text="5" Margin="0,10,0,0"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Temporal leniency"/>
                <CheckBox x:Name="CopyHitsoundsBox" IsChecked="True" Content="Copy hitsounds" Margin="0,10,0,0"/>
                <CheckBox x:Name="CopyBodyBox" IsChecked="True" Content="Copy sliderbody hitsounds"/>
                <CheckBox x:Name="CopySamplesetBox" IsChecked="True" Content="Copy samplesets"/>
                <CheckBox x:Name="CopyVolumeBox" IsChecked="True" Content="Copy volumes"/>
                <CheckBox x:Name="AlwaysPreserve5VolumeBox" IsChecked="True" Content="Always preserve 5% volume" Margin="20,0,0,0"
                    ToolTip="Objects with 5% volume will always stay 5% volume regardless of the copying mode"
                    Visibility="{Binding Path=IsChecked, ElementName=CopyVolumeBox, UpdateSourceTrigger=PropertyChanged,  
                                 Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
                <CheckBox x:Name="CopyStoryboardedSamplesBox" IsChecked="False" Content="Copy storyboarded samples"/>
                <CheckBox x:Name="IgnoreHitsoundSatisfiedSamplesBox" IsChecked="True" Content="Ignore samples satisfied by hitsounds" Margin="20,0,0,0"
                    ToolTip="Don't copy storyboarded samples that are already played by the hitsounds"
                    Visibility="{Binding Path=IsChecked, ElementName=CopyStoryboardedSamplesBox, UpdateSourceTrigger=PropertyChanged,  
                                 Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
                <CheckBox x:Name="MuteSliderendBox" IsChecked="False" Content="Mute sliderends"
                    ToolTip="Mute sliderends or spinnerends that have no defined hitsounds in the map you're copying from."/>
                <StackPanel Visibility="{Binding Path=IsChecked, ElementName=MuteSliderendBox, UpdateSourceTrigger=PropertyChanged,  
                                 Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <TextBlock FontSize="14" Margin="0,10,0,0"><Run Text="Sliderend muting filter:"/></TextBlock>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox x:Name="MutedSnap1" Grid.Column="0" Cursor="Hand" SelectedIndex="2"
                        ToolTip="Minimum snap of sliderend to be eligible for muting.">
                            <ComboBoxItem Content="1/1" Cursor="Hand"/>
                            <ComboBoxItem Content="1/2" Cursor="Hand"/>
                            <ComboBoxItem Content="1/4" Cursor="Hand"/>
                            <ComboBoxItem Content="1/8" Cursor="Hand"/>
                            <ComboBoxItem Content="1/16" Cursor="Hand"/>
                        </ComboBox>
                        <ComboBox x:Name="MutedSnap2" Grid.Column="2" Cursor="Hand" SelectedIndex="2"
                        ToolTip="Minimum snap of sliderend to be eligible for muting.">
                            <ComboBoxItem Content="1/1" Cursor="Hand"/>
                            <ComboBoxItem Content="1/3" Cursor="Hand"/>
                            <ComboBoxItem Content="1/6" Cursor="Hand"/>
                            <ComboBoxItem Content="1/12" Cursor="Hand"/>
                        </ComboBox>
                        <TextBox x:Name="MutedMinLengthBox" Grid.Column="4"
                            Text="1/2" ToolTip="Minimum length of slider in beats to be eligible for sliderend muting."/>
                    </Grid>
                    <TextBlock FontSize="14" Margin="0,10,0,0"><Run Text="Muted config:"/></TextBlock>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="70"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" x:Name="MutedCustomIndexBox"
                            ToolTip="Custom index for the muted sliderend. Leave empty for no change."/>
                        <ComboBox Grid.Column="2" x:Name="MutedSampleSetBox" SelectedIndex="1" Cursor="Hand"
                            ToolTip="Sampleset of the muted sliderend.">
                            <ComboBoxItem Content="Normal" Cursor="Hand"/>
                            <ComboBoxItem Content="Soft" Cursor="Hand"/>
                            <ComboBoxItem Content="Drum" Cursor="Hand"/>
                        </ComboBox>
                    </Grid>
                </StackPanel>
            </StackPanel>
            <Viewbox VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="70" Margin="10">
                <Button
                    IsEnabled="{Binding ElementName=This, Path=CanRun}"
                    Style="{StaticResource MaterialDesignFloatingActionButton}"
                    Click="Start_Click">
                    <materialDesign:PackIcon
                        Kind="Play" Height="36" Width="36" />
                </Button>
            </Viewbox>
        </Grid>
        <Grid Name="SecondGrid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <WrapPanel VerticalAlignment="Bottom">
                    <TextBlock TextWrapping="NoWrap" Text="Made by OliBomby" FontWeight="Bold" Opacity="0.58"/>
                </WrapPanel>
            </Grid>
            <Grid Grid.Column="1">
                <ProgressBar Value="{Binding ElementName=This, Path=Progress}" Margin="20,0,20,0" Height="20" Background="{x:Null}" BorderBrush="{x:Null}"/>
            </Grid>
        </Grid>
    </Grid>
</local:SingleRunMappingTool>
